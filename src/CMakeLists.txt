
file(GLOB files1 "*.cpp")
if(APPLE)
    file(GLOB itn_files "itn-*.cpp")
    list(REMOVE_ITEM files1 ${itn_files})
endif(APPLE)
list(REMOVE_ITEM files1 "${CMAKE_CURRENT_SOURCE_DIR}/paraformer-torch.cpp")
set(files ${files1})

if(GPU)
    set(files ${files} "${CMAKE_CURRENT_SOURCE_DIR}/paraformer-torch.cpp")
endif()

message("files: "${files})

if(WIN32)
add_compile_options("$<$<CXX_COMPILER_ID:MSVC>:/execution-charset:utf-8>")
add_compile_options("$<$<CXX_COMPILER_ID:MSVC>:/source-charset:utf-8>")
add_compile_options("$<$<CXX_COMPILER_ID:MSVC>:/bigobj>")
endif()

add_library(funasr SHARED ${files})

if(WIN32)
    set(EXTRA_LIBS yaml-cpp csrc kaldi-decoder fst glog gflags avutil avcodec avformat swresample onnxruntime)
    if(EN_X86)
        include_directories(${ONNXRUNTIME_DIR}/include)
    else()
        include_directories(/root/onnxruntime/include/onnxruntime/core/session)
    endif()
    include_directories(${FFMPEG_DIR}/include)
    
    if(EN_X86)
        target_link_directories(funasr PUBLIC ${ONNXRUNTIME_DIR}/lib)
    else()
        target_link_directories(funasr PUBLIC /root/onnxruntime/build/Linux/Release)
    endif()
    target_link_directories(funasr PUBLIC ${FFMPEG_DIR}/lib)
    target_compile_definitions(funasr PUBLIC -D_FUNASR_API_EXPORT -DNOMINMAX -DYAML_CPP_DLL)
else()
    set(EXTRA_LIBS pthread yaml-cpp csrc kaldi-decoder fst glog gflags avutil avcodec avformat swresample)
    if(EN_X86)
        include_directories(${ONNXRUNTIME_DIR}/include)
    else()
        include_directories(/root/onnxruntime/include/onnxruntime/core/session)
    endif()
    include_directories(${FFMPEG_DIR}/include)
    if(APPLE)
        if(EN_X86)
            target_link_directories(funasr PUBLIC ${ONNXRUNTIME_DIR}/lib)
        else()
            target_link_directories(funasr PUBLIC /root/onnxruntime/build/Linux/Release)
        endif()
        target_link_directories(funasr PUBLIC ${FFMPEG_DIR}/lib)
    endif(APPLE)    
endif()

if(GPU)
    set(TORCH_DEPS torch torch_cuda torch_cpu c10 c10_cuda torch_blade ral_base_context)
endif()

# nncase
include_directories(${NNCASE_PATH}/include
                    ${NNCASE_PATH}/include/nncase/runtime
                    )
link_directories(${NNCASE_PATH}/lib)

#message("CXX_FLAGS "${CMAKE_CXX_FLAGS})
include_directories(${CMAKE_SOURCE_DIR}/include)
include_directories(${CMAKE_SOURCE_DIR}/third_party)
if (EN_X86)
    target_link_libraries(funasr PUBLIC onnxruntime ${EXTRA_LIBS} ${TORCH_DEPS} Nncase.Runtime.Native)
else()
    target_link_libraries(funasr PUBLIC onnxruntime ${EXTRA_LIBS} ${TORCH_DEPS} nncase.rt_modules.k230 Nncase.Runtime.Native functional_k230 mmz)
endif()
# target_link_libraries(funasr PUBLIC onnxruntime ${EXTRA_LIBS} ${TORCH_DEPS})
